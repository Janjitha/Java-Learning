1. Display the values of array in static

CODE:

public class Array_Static_01 {
	public static void main(String[] args) {
			int arr[] = {1,2,3,4,5};
			for(int i=0;i<arr.length;i++) {
				System.out.println(arr[i]);
			}
	}
}

OUTPUT:
1
2
3
4
5

================================================================================================================

2. For Each Loop

CODE:

public class Array_ForEachLoop_02 {
	public static void main(String[] args) {
		int arr[]= {1,2,3,4,5,6,7,8,9,10};
		System.out.println("Total Elements : "+arr.length);
		//for each loop
		for(int val : arr) {
			System.out.print(val+" ");
	    }
	}
}

OUTPUT:
Total Elements : 10
1 2 3 4 5 6 7 8 9 10 

==============================================================================================================

3. Concepts of Array indexing

CODE:

public class Array_Index_03 {
	public static void main(String[] args) {
		int arr[] = {1,2,3,4,5,6,7,8,9,10};
		int pos=9; //if 10 or -1 it prints error message
	    int position=-1;
		System.out.println("First element:"+arr[0]);//first element
		System.out.println("Last element:"+arr[arr.length - 1]); //last element
		System.out.println("4th element:"+arr[3]);
		if(pos<arr.length)
			System.out.println("The position of the element:"+arr[pos]);
		else
			System.out.println("Position exceeds array limit");
        if(position >=0 && position <arr.length)  // if position = -1
        	System.out.println(arr[position]);
        else
        	System.out.println("Position exceeds");
	}
}

OUTPUT:
First element:1
Last element:10
4th element:4
The position of the element:10
Position exceeds

==============================================================================================================

4. Reverse the given array

CODE:

public class Array_Reverse_04 {
	public static void main(String[] args) {
		int arr[]= {1,2,3,4,5,6,7,8};
		for(int i = arr.length-1;i>=0;i--) {
			System.out.print(arr[i]+" ");
		}
	}
}

OUTPUT:
8 7 6 5 4 3 2 1 

==============================================================================================================